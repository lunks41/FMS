@model OwnerExpenseHd;

@{
    ViewData["Title"] = "Add New Expences - Expences";
}

@section PageScripts {
    <script src="~/js/common.js"></script>
}

@* ************** Content ************** *@

<div class="row">
    <div class="col-md-12">
        @*   <form id="formAccountSettings" asp-controller="Transactions" asp-action="DefineExpense" asp-route-eid="@Model.EncId" asp-antiforgery="true"> *@
        <div class="card mb-4">
            <h4 class="card-header">
                Add Expense Details
                <div style="float:right">
                    @if (Model.OwnerExpenseId > 0)
                    {
                        <button class="btn btn-success" onclick="UpsertExpense()">Update</button>
                        <a asp-controller="Transactions" asp-action="DeleteExpense" asp-route-eid="@Model.EncId" class="btn btn-danger">Delete</a>
                    }
                    else
                    {
                        <button class="btn btn-success" onclick="UpsertExpense()">Save</button>
                    }

                    <a asp-controller="Transactions" asp-action="GetExpense" class="btn btn-primary">Back</a>
                </div>
            </h4>
            <!-- Account -->
            <div class="card-body pt-2 mt-1">
                <div class="row gy-4">
                    @*  @Html.HiddenFor(m => m.OwnerExpenseId)
                    @Html.HiddenFor(m => m.EncId) *@
                    <input asp-for="OwnerExpenseId" hidden />
                    <input asp-for="EncId" hidden />
                    <label>Header</label>

                    <div class="col-md-3">
                        <div class="form-floating form-floating-outline">
                            <input asp-for="OwnerExpenseNo" class="form-control" type="text" id="txt_ownerExpenseNo" name="ownerExpenseNo" readonly />
                            <label for="ownerExpenseNo">Expense Number</label>
                        </div>
                    </div>

                    <div class="col-md-3">
                        <div class="form-floating form-floating-outline">
                            <select id="ddsaleid" asp-for="SaleId" asp-items="ViewBag.SaleList" class="select2 form-select" autofocus>
                                <option value="">-- Select --</option>
                            </select>
                            <label for="country">Sale Number</label>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-floating form-floating-outline">
                            <input asp-for="TotalAmount" class="form-control" type="number" id="txt_totalamount" name="totalamount" readonly />
                            <label for="totalamount">Total Amount</label>
                        </div>
                    </div>

                    <label>Details</label>

                    <div class="col-md-3">
                        <div class="form-floating form-floating-outline">
                            <select id="ddExpensetype" asp-items="ViewBag.ExpenseTypeList" class="select2 form-select">
                                <option value="">-- Select --</option>
                            </select>
                            <label for="expensetype">Expense Type</label>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-floating form-floating-outline">
                            <input class="form-control" type="number" id="txt_Qty" name="qty" onblur="DetailsAmountCalculation()" />
                            <label for="qty">Qty</label>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-floating form-floating-outline">
                            <input class="form-control" type="number" id="txt_Price" name="price" onblur="DetailsAmountCalculation()" />
                            <label for="price">Price</label>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-floating form-floating-outline">
                            <input class="form-control" type="number" id="txt_Amount" name="amount" readonly />
                            <label for="amount">Amount</label>
                        </div>
                    </div>
                    <div class="col-md-1" id="SquenceNo">
                        <div class="form-floating form-floating-outline">
                            <input class="form-control" type="number" id="txt_SquenceNo" name="SquenceNo" />
                            <label for="SquenceNo">Squence No</label>
                        </div>
                    </div>
                    <div class="col-md-1" id="SquenceNo" style="display:none">
                        <div class="form-floating form-floating-outline">
                            <input class="form-control" type="number" id="txt_ItemNumber" name="ItemNumber" readonly />
                            <label for="ItemNumber">Item Number</label>
                        </div>
                    </div>
                    <div class="col-md-2 d-flex">
                        <div class="form-floating form-floating-outline">
                            <button type="button" class="btn btn-outline-success tf-icons mdi mdi-plus-box-multiple" onclick="AddExpenseDetails()">Add</button>
                            <button type="button" class="btn btn-outline-danger tf-icons mdi mdi-plus-box-multiple" onclick="ClearExpenseDetails()">Clear</button>
                        </div>
                    </div>
                </div>

                <br />

                <label>Grid Details</label>

                <br />

                <div id="grid_ExpenseDetails">
                </div>

            </div>
            <!-- /Account -->

        </div>
        @*  </form> *@
    </div>
</div>

@section Scripts {

    <script>
        var Eid = '';

        $(document).ready(function () {
            $("#SquenceNo").hide();
            ClearExpenseDetails();

            $("#OwnerExpenseId").val();
            $("#EncId").val();
            LoadGetExpense();
        });

        function LoadGetExpense() {

            var eid = $("#EncId").val();
            var GridName = 'ExpenseDetails';
            var Url = '@Url.Action("GetExpenseDetailsList", "Transactions")';
            var PageSize = 60;

            var Columns_properties = [
                { columnName: 'ItemNo', dataType: 'string', width: 130, isHidden: true, islocked: false, iseditable: false },
                { columnName: 'SquenceNo', dataType: 'string', width: 50, title: 'Sr', isHidden: false, islocked: false, iseditable: false },
                { columnName: 'OwnerExpenseId', isHidden: true, islocked: false, iseditable: false, width: '100px', dataType: 'string', title: 'ID' },
                { columnName: 'OwnerExpenseNo', isHidden: true, islocked: false, iseditable: false, width: '100px', dataType: 'string', title: 'Number' },
                { columnName: 'ExpenseTypeId', isHidden: true, islocked: false, iseditable: false, width: '100px', dataType: 'string', title: 'Expense Id' },
                { columnName: 'ExpenseTypeName', isHidden: false, islocked: false, iseditable: false, width: '100px', dataType: 'string', title: 'Expense Name' },
                { columnName: 'Qty', isHidden: false, islocked: false, iseditable: false, width: '100px', dataType: 'amount', title: 'Qty' },
                { columnName: 'Price', isHidden: false, islocked: false, iseditable: false, width: '100px', dataType: 'amount', title: 'Price' },
                { columnName: 'Amount', isHidden: false, islocked: false, iseditable: false, width: '100px', dataType: 'amount', title: 'Total' },
            ]

            var Params = { 'eid': eid };

            var DataFunction = [{ GridHeight: false, template: false, toolbar: false, dataBound: false, save: false, GridColumnTemplate: true }];

            FillUpdatedGrid(Url, Params, GridName, PageSize = 60, Columns_properties, Aggregate = "", DataFunction, ScreenName = "", ReportName = "Expense List");
        }

        function GridColumnTemplate_ExpenseDetails(GridData, Tab) {

            var Edit = "<div  class='btn btn-icon btn-primary' onclick=\"EditExpenseDt()\" title='Edit'><span class='mdi mdi-pencil'></span></div>";
            var Delete = "<div  class='btn btn-icon btn-danger' onclick=\"DeleteExpenseDt()\" title='Delete'><span class='mdi mdi-trash-can-outline'></span></div>";

            var Template = Edit + '  ' + Delete;

            columnsOptions.push({
                field: "",
                title: "Action",
                width: 100,
                filterable: {
                    cell: {
                        enabled: false
                    }
                },
                template: Template
            });
        }

        function EditExpenseDt() {

            var gridData = $("#grid_ExpenseDetails").data("kendoGrid");

            var selectedRows = gridData.select();
            selectedRows.each(function (index, row) {
                var selectedItem = gridData.dataItem(row);

                $("#ddExpensetype").val(selectedItem.ExpenseTypeId);
                $("#txt_Qty").val(selectedItem.Qty);
                $("#txt_Price").val(selectedItem.Price);
                $("#txt_Amount").val(selectedItem.Amount);
                $("#txt_SquenceNo").val(selectedItem.SquenceNo);
                $("#txt_ItemNumber").val(selectedItem.ItemNo);
            });

            $("#SquenceNo").show();
            $("#txt_SquenceNo").show();
        }

        function DeleteExpenseDt() {

            var grid = $("#grid_ExpenseDetails").data("kendoGrid");
            var dataSource = grid.dataSource;
            var GridLength = dataSource.data().length;

            var rows = grid.select();
            var selectedItem = grid.dataItem(rows);
            grid.dataSource.remove(selectedItem);

            HeaderAmountCalculation();
        }

        function HeaderAmountCalculation() {

            var TotalAMT = 0;

            var grid = $("#grid_ExpenseDetails").data("kendoGrid");

            if (grid != undefined) {
                var gridData = grid.dataSource.data();

                for (var i = 0; i < gridData.length; i++) {

                    var uid = gridData[i].uid;
                    var row = grid.table.find("tr[data-uid='" + uid + "']");

                    var Amount = $(row).find("[data-field='Amount']").html();

                    if (Amount != undefined) {
                        Amount = (Amount.replace(',', ''));
                        Amount = parseFloat(Amount);
                    } else {
                        Amount = gridData[i].Amount;
                    }

                    TotalAMT = (parseFloat(TotalAMT) + parseFloat(Amount)).toFixed(2);
                }

                $("#txt_totalamount").val(parseFloat(TotalAMT).toFixed(2));
            }
        }

        function AddExpenseDetails() {

            if (ValidateExpenseDetails()) {

                var lengthgrid = 0;
                var INVOICE_ID = 0;
                var grid = undefined;
                grid = $("#grid_ExpenseDetails").data("kendoGrid");
                if (grid == undefined) {
                    grid = $("#grid_ExpenseDetails").kendoGrid().data("kendoGrid");
                    lengthgrid = 0;
                }
                else {
                    lengthgrid = grid.dataSource.data().length;
                }
                var dataSource = $("#grid_ExpenseDetails").data().kendoGrid.dataSource;
                var DataAdd = [];

                for (var i = 0; i < lengthgrid; i++) {

                    DataAdd.push({
                        SquenceNo: dataSource.data()[i].SquenceNo,
                        ItemNo: dataSource.data()[i].ItemNo,
                        OwnerExpenseId: dataSource.data()[i].OwnerExpenseId,
                        OwnerExpenseNo: dataSource.data()[i].OwnerExpenseNo,
                        ExpenseTypeId: dataSource.data()[i].ExpenseTypeId,
                        ExpenseTypeName: dataSource.data()[i].ExpenseTypeName,
                        Qty: dataSource.data()[i].Qty,
                        Price: dataSource.data()[i].Price,
                        Amount: dataSource.data()[i].Amount,
                    });
                }

                if ($("#txt_SquenceNo").val() == '') {

                    DataAdd.push({
                        SquenceNo: lengthgrid + 1,
                        ItemNo: lengthgrid + 1,
                        OwnerExpenseId: INVOICE_ID == 0 ? lengthgrid + 1 : INVOICE_ID,
                        OwnerExpenseNo: "",
                        ExpenseTypeId: $('#ddExpensetype').val() == '' ? 0 : $("#ddExpensetype").val(),
                        ExpenseTypeName: $("#ddExpensetype option:selected").text(),
                        Qty: $("#txt_Qty").val(),
                        Price: $("#txt_Price").val(),
                        Amount: $("#txt_Amount").val(),
                    });
                }
                else {

                    objIndex = DataAdd.findIndex((obj => obj.ItemNo == parseInt($("#txt_SquenceNo").val())));

                    DataAdd[objIndex].SquenceNo = $("#txt_SquenceNo").val();
                    DataAdd[objIndex].ItemNo = $("#txt_ItemNumber").val();
                    DataAdd[objIndex].OwnerExpenseId = INVOICE_ID == 0 ? lengthgrid + 1 : INVOICE_ID;
                    DataAdd[objIndex].OwnerExpenseNo = "";
                    DataAdd[objIndex].ExpenseTypeId = $('#ddExpensetype').val() == '' ? 0 : $("#ddExpensetype").val();
                    DataAdd[objIndex].ExpenseTypeName = $("#ddExpensetype option:selected").text();
                    DataAdd[objIndex].Qty = $("#txt_Qty").val();
                    DataAdd[objIndex].Price = $("#txt_Price").val();
                    DataAdd[objIndex].Amount = $("#txt_Amount").val();
                }

                var Columns_properties = [
                    { columnName: 'ItemNo', dataType: 'string', width: 130, isHidden: true, islocked: false, iseditable: false },
                    { columnName: 'SquenceNo', dataType: 'string', width: 50, title: 'Sr', isHidden: false, islocked: false, iseditable: false },
                    { columnName: 'OwnerExpenseId', isHidden: true, islocked: false, iseditable: false, width: '100px', dataType: 'string', title: 'ID' },
                    { columnName: 'OwnerExpenseNo', isHidden: true, islocked: false, iseditable: false, width: '100px', dataType: 'string', title: 'Number' },
                    { columnName: 'ExpenseTypeId', isHidden: true, islocked: false, iseditable: false, width: '100px', dataType: 'string', title: 'Expense Id' },
                    { columnName: 'ExpenseTypeName', isHidden: false, islocked: false, iseditable: false, width: '100px', dataType: 'string', title: 'Expense Name' },
                    { columnName: 'Qty', isHidden: false, islocked: false, iseditable: false, width: '100px', dataType: 'amount', title: 'Qty' },
                    { columnName: 'Price', isHidden: false, islocked: false, iseditable: false, width: '100px', dataType: 'amount', title: 'Price' },
                    { columnName: 'Amount', isHidden: false, islocked: false, iseditable: false, width: '100px', dataType: 'amount', title: 'Total' },
                ]

                var DataFunction = [{ GridHeight: false, template: false, toolbar: false, dataBound: false, save: false, GridColumnTemplate: true }];

                FillUpdatedGrid(Url = '', Params = '', GridName = 'ExpenseDetails', PageSize = '', Columns_properties, Aggregate = '', DataFunction, ScreenName = "Expense", ReportName = "Expense List", JSON.stringify(DataAdd));

                $('#grid_ExpenseDetails').show();
                ClearExpenseDetails();
                HeaderAmountCalculation();
            } else {

            }

        }

        function ClearExpenseDetails() {

            var typeid = $('#ddExpensetype').val('');
            //var typename = $("#ddExpensetype option:selected").text();

            $("#txt_Qty").val('0');
            $("#txt_Price").val('0.00');
            $("#txt_Amount").val('0.00');
            $("#SquenceNo").hide();
        }

        function DetailsAmountCalculation() {
            var qty = parseFloat($('#txt_Qty').val() == '' ? 0 : $('#txt_Qty').val());
            var price = parseFloat($('#txt_Price').val() == '' ? 0 : $('#txt_Price').val());

            var amt = qty * price;
            $("#txt_Amount").val(amt);

        }

        function UpsertExpense() {

            if (ValidateExpense()) {

                if (parseInt($("#txt_TotalAmt").val()) != 0) {

                    var eid = $("#EncId").val();

                    var JsonExpense = {
                        OwnerExpenseId: $("#OwnerExpenseId").val(),
                        OwnerExpenseNo: $("#txt_ownerExpenseNo").val(),
                        SaleId: $("#ddsaleid").val(),
                        SaleNo: $("#ddsaleid option:selected").text(),
                        TotalAmount: $("#txt_totalamount").val(),
                    }

                    var JsonString = JSON.stringify(JsonExpense);

                    var grid = $("#grid_ExpenseDetails").data("kendoGrid");
                    if (grid != undefined) {
                        var data = grid.dataSource.data().length;
                        if (data > 0) {
                            var gridData = grid.dataSource.data();
                            var JsonDetails = JSON.stringify(gridData);

                            var Url = '@Url.Action("DefineExpense", "Transactions")';
                            var Params = { 'eid': eid, 'JsonString': JsonString, 'JsonDetails': JsonDetails };

                            $.ajax({
                                type: "POST",
                                url: Url,
                                data: Params,
                                success: function (e) {
                                    response = JSON.parse(e)
                                    if (response.Id > 0) {
                                        toastr.success(response.Msg);
                                    } else {
                                        toastr.error(response.Msg);
                                    }
                                },
                            })

                            //CreateRecordNew(Url, Params, IsRedirect);
                        } else {

                            alert("You can not save without details expense");
                        }
                    }
                }
            }
        }

        function ValidateExpense() {

            var Valid = true;

            var SaleNo = $("#ddsaleid").val();
            var TotalAmt = $("#txt_totalamount").val();

            if (SaleNo == "" || SaleNo == "0") {
                toastr.warning('Please select Sales Number');
                Valid = false;
            } else if (TotalAmt == "") {
                toastr.warning('Please Enter Amount');
                Valid = false;
                $("#txt_totalamount").focus();
            }

            return Valid;
        }

        function ValidateExpenseDetails() {

            var Valid = true;

            var expensetype = $('#ddExpensetype').val();
            var qty = $("#txt_Qty").val();
            var price = $("#txt_Price").val();
            var amount = $("#txt_Amount").val();

            if (expensetype == "" || parseFloat(expensetype) <= 0) {
                Valid = false;
                toastr.warning('Please Select Expense Type');
                $("#ddExpensetype").focus();
            } else if (qty == "" || parseFloat(qty) <= 0) {
                Valid = false;
                toastr.warning('Please Enter Qty');
                $("#txt_Qty").focus();
            } else if (price == "" || parseFloat(price) <= 0) {
                Valid = false;
                toastr.warning('Please Enter Price');
                $("#txt_Price").focus();
            } else if (amount == "" || parseFloat(amount) <= 0) {
                Valid = false;
                toastr.warning('Please Enter Amount');
                $("#txt_Amount").focus();
            }

            return Valid;
        }

        function RedirectActionToList() {

            var Url = '@Url.Action("GetExpense", "Transactions", new { area = "" })';
            var Params = "";
            var Type = 'GET';
            CommonAjaxRequest(Url, Params, Type);
        }

        function RedirectActionToEdit(data) {

            if (data.RESULT > 0) {
                var Url = '@Url.Action("DefineExpense", "Transactions", new { area = "" })';
                var Params = "{'InvoiceId': '" + data.RESULT + "'}";

                var Type = 'POST'
                CommonAjaxRequest(Url, Params, Type);
            }
        }

    </script>
}